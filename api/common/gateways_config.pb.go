// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yql/essentials/providers/common/proto/gateways_config.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EGenericDataSourceKind enumerates the external data sources
// supported by the federated query system
type EGenericDataSourceKind int32

const (
	EGenericDataSourceKind_DATA_SOURCE_KIND_UNSPECIFIED EGenericDataSourceKind = 0
	EGenericDataSourceKind_CLICKHOUSE                   EGenericDataSourceKind = 1
	EGenericDataSourceKind_POSTGRESQL                   EGenericDataSourceKind = 2
	EGenericDataSourceKind_S3                           EGenericDataSourceKind = 3
	EGenericDataSourceKind_YDB                          EGenericDataSourceKind = 4
	EGenericDataSourceKind_MYSQL                        EGenericDataSourceKind = 5
	EGenericDataSourceKind_MS_SQL_SERVER                EGenericDataSourceKind = 6
	EGenericDataSourceKind_GREENPLUM                    EGenericDataSourceKind = 7
	EGenericDataSourceKind_ORACLE                       EGenericDataSourceKind = 8
	EGenericDataSourceKind_LOGGING                      EGenericDataSourceKind = 9
	EGenericDataSourceKind_MONGO_DB                     EGenericDataSourceKind = 10
	EGenericDataSourceKind_REDIS                        EGenericDataSourceKind = 11
	EGenericDataSourceKind_PROMETHEUS                   EGenericDataSourceKind = 12
)

// Enum value maps for EGenericDataSourceKind.
var (
	EGenericDataSourceKind_name = map[int32]string{
		0:  "DATA_SOURCE_KIND_UNSPECIFIED",
		1:  "CLICKHOUSE",
		2:  "POSTGRESQL",
		3:  "S3",
		4:  "YDB",
		5:  "MYSQL",
		6:  "MS_SQL_SERVER",
		7:  "GREENPLUM",
		8:  "ORACLE",
		9:  "LOGGING",
		10: "MONGO_DB",
		11: "REDIS",
		12: "PROMETHEUS",
	}
	EGenericDataSourceKind_value = map[string]int32{
		"DATA_SOURCE_KIND_UNSPECIFIED": 0,
		"CLICKHOUSE":                   1,
		"POSTGRESQL":                   2,
		"S3":                           3,
		"YDB":                          4,
		"MYSQL":                        5,
		"MS_SQL_SERVER":                6,
		"GREENPLUM":                    7,
		"ORACLE":                       8,
		"LOGGING":                      9,
		"MONGO_DB":                     10,
		"REDIS":                        11,
		"PROMETHEUS":                   12,
	}
)

func (x EGenericDataSourceKind) Enum() *EGenericDataSourceKind {
	p := new(EGenericDataSourceKind)
	*p = x
	return p
}

func (x EGenericDataSourceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGenericDataSourceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[0].Descriptor()
}

func (EGenericDataSourceKind) Type() protoreflect.EnumType {
	return &file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[0]
}

func (x EGenericDataSourceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGenericDataSourceKind.Descriptor instead.
func (EGenericDataSourceKind) EnumDescriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{0}
}

// EGenericProtocol generalizes various kinds of network protocols supported by different databases.
type EGenericProtocol int32

const (
	EGenericProtocol_PROTOCOL_UNSPECIFIED EGenericProtocol = 0
	EGenericProtocol_NATIVE               EGenericProtocol = 1 // CLICKHOUSE, POSTGRESQL
	EGenericProtocol_HTTP                 EGenericProtocol = 2 // CLICKHOUSE, S3
)

// Enum value maps for EGenericProtocol.
var (
	EGenericProtocol_name = map[int32]string{
		0: "PROTOCOL_UNSPECIFIED",
		1: "NATIVE",
		2: "HTTP",
	}
	EGenericProtocol_value = map[string]int32{
		"PROTOCOL_UNSPECIFIED": 0,
		"NATIVE":               1,
		"HTTP":                 2,
	}
)

func (x EGenericProtocol) Enum() *EGenericProtocol {
	p := new(EGenericProtocol)
	*p = x
	return p
}

func (x EGenericProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGenericProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[1].Descriptor()
}

func (EGenericProtocol) Type() protoreflect.EnumType {
	return &file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[1]
}

func (x EGenericProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGenericProtocol.Descriptor instead.
func (EGenericProtocol) EnumDescriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{1}
}

type TMongoDbDataSourceOptions_EReadingMode int32

const (
	TMongoDbDataSourceOptions_READING_MODE_UNSPECIFIED TMongoDbDataSourceOptions_EReadingMode = 0
	// Returns each top level field of the document deserialized into the corresponding YQL type; if the type of some field is ambiguous / inconsistent across several documents it is returned serialized as an YQL Utf8 value
	TMongoDbDataSourceOptions_TABLE TMongoDbDataSourceOptions_EReadingMode = 1
)

// Enum value maps for TMongoDbDataSourceOptions_EReadingMode.
var (
	TMongoDbDataSourceOptions_EReadingMode_name = map[int32]string{
		0: "READING_MODE_UNSPECIFIED",
		1: "TABLE",
	}
	TMongoDbDataSourceOptions_EReadingMode_value = map[string]int32{
		"READING_MODE_UNSPECIFIED": 0,
		"TABLE":                    1,
	}
)

func (x TMongoDbDataSourceOptions_EReadingMode) Enum() *TMongoDbDataSourceOptions_EReadingMode {
	p := new(TMongoDbDataSourceOptions_EReadingMode)
	*p = x
	return p
}

func (x TMongoDbDataSourceOptions_EReadingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TMongoDbDataSourceOptions_EReadingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[2].Descriptor()
}

func (TMongoDbDataSourceOptions_EReadingMode) Type() protoreflect.EnumType {
	return &file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[2]
}

func (x TMongoDbDataSourceOptions_EReadingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TMongoDbDataSourceOptions_EReadingMode.Descriptor instead.
func (TMongoDbDataSourceOptions_EReadingMode) EnumDescriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{8, 0}
}

// Ways of dealing with values read in ReadSplit whose types are inconsistent with types that were deduced in DescribeTable
type TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode int32

const (
	TMongoDbDataSourceOptions_UNEXPECTED_UNSPECIFIED TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode = 0
	TMongoDbDataSourceOptions_UNEXPECTED_AS_NULL     TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode = 1
	TMongoDbDataSourceOptions_UNEXPECTED_AS_STRING   TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode = 2
)

// Enum value maps for TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode.
var (
	TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode_name = map[int32]string{
		0: "UNEXPECTED_UNSPECIFIED",
		1: "UNEXPECTED_AS_NULL",
		2: "UNEXPECTED_AS_STRING",
	}
	TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode_value = map[string]int32{
		"UNEXPECTED_UNSPECIFIED": 0,
		"UNEXPECTED_AS_NULL":     1,
		"UNEXPECTED_AS_STRING":   2,
	}
)

func (x TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode) Enum() *TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode {
	p := new(TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode)
	*p = x
	return p
}

func (x TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[3].Descriptor()
}

func (TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode) Type() protoreflect.EnumType {
	return &file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[3]
}

func (x TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode.Descriptor instead.
func (TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode) EnumDescriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{8, 1}
}

// Ways of dealing with unsupported data types
type TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode int32

const (
	TMongoDbDataSourceOptions_UNSUPPORTED_UNSPECIFIED TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode = 0
	TMongoDbDataSourceOptions_UNSUPPORTED_OMIT        TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode = 1
	TMongoDbDataSourceOptions_UNSUPPORTED_AS_STRING   TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode = 2
)

// Enum value maps for TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode.
var (
	TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode_name = map[int32]string{
		0: "UNSUPPORTED_UNSPECIFIED",
		1: "UNSUPPORTED_OMIT",
		2: "UNSUPPORTED_AS_STRING",
	}
	TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode_value = map[string]int32{
		"UNSUPPORTED_UNSPECIFIED": 0,
		"UNSUPPORTED_OMIT":        1,
		"UNSUPPORTED_AS_STRING":   2,
	}
)

func (x TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode) Enum() *TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode {
	p := new(TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode)
	*p = x
	return p
}

func (x TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[4].Descriptor()
}

func (TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode) Type() protoreflect.EnumType {
	return &file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes[4]
}

func (x TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode.Descriptor instead.
func (TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode) EnumDescriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{8, 2}
}

// TGenericEndpoint represents the network address of a generic data source instance
type TGenericEndpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TGenericEndpoint) Reset() {
	*x = TGenericEndpoint{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TGenericEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGenericEndpoint) ProtoMessage() {}

func (x *TGenericEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGenericEndpoint.ProtoReflect.Descriptor instead.
func (*TGenericEndpoint) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{0}
}

func (x *TGenericEndpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TGenericEndpoint) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// TGenericCredentials represents various ways of user authentication in the data source instance
type TGenericCredentials struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TGenericCredentials_Basic
	//	*TGenericCredentials_Token
	Payload       isTGenericCredentials_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TGenericCredentials) Reset() {
	*x = TGenericCredentials{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TGenericCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGenericCredentials) ProtoMessage() {}

func (x *TGenericCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGenericCredentials.ProtoReflect.Descriptor instead.
func (*TGenericCredentials) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{1}
}

func (x *TGenericCredentials) GetPayload() isTGenericCredentials_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TGenericCredentials) GetBasic() *TGenericCredentials_TBasic {
	if x != nil {
		if x, ok := x.Payload.(*TGenericCredentials_Basic); ok {
			return x.Basic
		}
	}
	return nil
}

func (x *TGenericCredentials) GetToken() *TGenericCredentials_TToken {
	if x != nil {
		if x, ok := x.Payload.(*TGenericCredentials_Token); ok {
			return x.Token
		}
	}
	return nil
}

type isTGenericCredentials_Payload interface {
	isTGenericCredentials_Payload()
}

type TGenericCredentials_Basic struct {
	Basic *TGenericCredentials_TBasic `protobuf:"bytes,1,opt,name=basic,proto3,oneof"`
}

type TGenericCredentials_Token struct {
	Token *TGenericCredentials_TToken `protobuf:"bytes,2,opt,name=token,proto3,oneof"`
}

func (*TGenericCredentials_Basic) isTGenericCredentials_Payload() {}

func (*TGenericCredentials_Token) isTGenericCredentials_Payload() {}

// TPostgreSQLDataSourceOptions represents settings specific to PostgreSQL
type TPostgreSQLDataSourceOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostgreSQL schema
	Schema        string `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TPostgreSQLDataSourceOptions) Reset() {
	*x = TPostgreSQLDataSourceOptions{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TPostgreSQLDataSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPostgreSQLDataSourceOptions) ProtoMessage() {}

func (x *TPostgreSQLDataSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPostgreSQLDataSourceOptions.ProtoReflect.Descriptor instead.
func (*TPostgreSQLDataSourceOptions) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{2}
}

func (x *TPostgreSQLDataSourceOptions) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

// TClickhouseDataSourceOptions represents settings specific to Clickhouse
type TClickhouseDataSourceOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TClickhouseDataSourceOptions) Reset() {
	*x = TClickhouseDataSourceOptions{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TClickhouseDataSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TClickhouseDataSourceOptions) ProtoMessage() {}

func (x *TClickhouseDataSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TClickhouseDataSourceOptions.ProtoReflect.Descriptor instead.
func (*TClickhouseDataSourceOptions) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{3}
}

// TS3DataSourceOptions represents settings specific to S3 (Simple Storage Service)
type TS3DataSourceOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the region where data is stored
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// the bucket the object belongs to
	Bucket        string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TS3DataSourceOptions) Reset() {
	*x = TS3DataSourceOptions{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TS3DataSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TS3DataSourceOptions) ProtoMessage() {}

func (x *TS3DataSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TS3DataSourceOptions.ProtoReflect.Descriptor instead.
func (*TS3DataSourceOptions) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{4}
}

func (x *TS3DataSourceOptions) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *TS3DataSourceOptions) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

// TGreenplumDataSourceOptions represents settings specific to Greenplum
type TGreenplumDataSourceOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Greenplum schema
	Schema        string `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TGreenplumDataSourceOptions) Reset() {
	*x = TGreenplumDataSourceOptions{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TGreenplumDataSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGreenplumDataSourceOptions) ProtoMessage() {}

func (x *TGreenplumDataSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGreenplumDataSourceOptions.ProtoReflect.Descriptor instead.
func (*TGreenplumDataSourceOptions) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{5}
}

func (x *TGreenplumDataSourceOptions) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

// TOracleDataSourceOptions represents settings specific to Oracle
type TOracleDataSourceOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Oracle service_name - alias to SID of oracle INSTANCE, or SID, or PDB.
	//
	//	More about connection options in Oracle docs:
	//	https://docs.oracle.com/en/database/other-databases/essbase/21/essoa/connection-string-formats.html
	ServiceName   string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TOracleDataSourceOptions) Reset() {
	*x = TOracleDataSourceOptions{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TOracleDataSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TOracleDataSourceOptions) ProtoMessage() {}

func (x *TOracleDataSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TOracleDataSourceOptions.ProtoReflect.Descriptor instead.
func (*TOracleDataSourceOptions) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{6}
}

func (x *TOracleDataSourceOptions) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// TLoggingDataSourceOptions represents settings specific to Logging
type TLoggingDataSourceOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FolderId      string                 `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLoggingDataSourceOptions) Reset() {
	*x = TLoggingDataSourceOptions{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLoggingDataSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLoggingDataSourceOptions) ProtoMessage() {}

func (x *TLoggingDataSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLoggingDataSourceOptions.ProtoReflect.Descriptor instead.
func (*TLoggingDataSourceOptions) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{7}
}

func (x *TLoggingDataSourceOptions) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

// TMongoDbDataSourceOptions represents settings specific to MongoDB
type TMongoDbDataSourceOptions struct {
	state                      protoimpl.MessageState                                `protogen:"open.v1"`
	ReadingMode                TMongoDbDataSourceOptions_EReadingMode                `protobuf:"varint,1,opt,name=reading_mode,json=readingMode,proto3,enum=NYql.TMongoDbDataSourceOptions_EReadingMode" json:"reading_mode,omitempty"`
	UnexpectedTypeDisplayMode  TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode  `protobuf:"varint,2,opt,name=unexpected_type_display_mode,json=unexpectedTypeDisplayMode,proto3,enum=NYql.TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode" json:"unexpected_type_display_mode,omitempty"`
	UnsupportedTypeDisplayMode TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode `protobuf:"varint,3,opt,name=unsupported_type_display_mode,json=unsupportedTypeDisplayMode,proto3,enum=NYql.TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode" json:"unsupported_type_display_mode,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *TMongoDbDataSourceOptions) Reset() {
	*x = TMongoDbDataSourceOptions{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TMongoDbDataSourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMongoDbDataSourceOptions) ProtoMessage() {}

func (x *TMongoDbDataSourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMongoDbDataSourceOptions.ProtoReflect.Descriptor instead.
func (*TMongoDbDataSourceOptions) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{8}
}

func (x *TMongoDbDataSourceOptions) GetReadingMode() TMongoDbDataSourceOptions_EReadingMode {
	if x != nil {
		return x.ReadingMode
	}
	return TMongoDbDataSourceOptions_READING_MODE_UNSPECIFIED
}

func (x *TMongoDbDataSourceOptions) GetUnexpectedTypeDisplayMode() TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode {
	if x != nil {
		return x.UnexpectedTypeDisplayMode
	}
	return TMongoDbDataSourceOptions_UNEXPECTED_UNSPECIFIED
}

func (x *TMongoDbDataSourceOptions) GetUnsupportedTypeDisplayMode() TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode {
	if x != nil {
		return x.UnsupportedTypeDisplayMode
	}
	return TMongoDbDataSourceOptions_UNSUPPORTED_UNSPECIFIED
}

// TGenericDataSourceInstance helps to identify the instance of a data source to redirect request to.
type TGenericDataSourceInstance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data source kind
	Kind EGenericDataSourceKind `protobuf:"varint,1,opt,name=kind,proto3,enum=NYql.EGenericDataSourceKind" json:"kind,omitempty"`
	// Network address
	Endpoint *TGenericEndpoint `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Database name
	Database string `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	// Credentials to access database
	Credentials *TGenericCredentials `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// If true, Connector server will use secure connections to access remote data sources.
	// Certificates will be obtained from the standard system paths.
	UseTls bool `protobuf:"varint,5,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	// Allows to specify network protocol that should be used between
	// during the connection between Connector and the remote data source
	Protocol EGenericProtocol `protobuf:"varint,6,opt,name=protocol,proto3,enum=NYql.EGenericProtocol" json:"protocol,omitempty"`
	// Options specific to various data sources
	//
	// Types that are valid to be assigned to Options:
	//
	//	*TGenericDataSourceInstance_PgOptions
	//	*TGenericDataSourceInstance_ChOptions
	//	*TGenericDataSourceInstance_S3Options
	//	*TGenericDataSourceInstance_GpOptions
	//	*TGenericDataSourceInstance_OracleOptions
	//	*TGenericDataSourceInstance_LoggingOptions
	//	*TGenericDataSourceInstance_MongodbOptions
	Options       isTGenericDataSourceInstance_Options `protobuf_oneof:"options"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TGenericDataSourceInstance) Reset() {
	*x = TGenericDataSourceInstance{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TGenericDataSourceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGenericDataSourceInstance) ProtoMessage() {}

func (x *TGenericDataSourceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGenericDataSourceInstance.ProtoReflect.Descriptor instead.
func (*TGenericDataSourceInstance) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{9}
}

func (x *TGenericDataSourceInstance) GetKind() EGenericDataSourceKind {
	if x != nil {
		return x.Kind
	}
	return EGenericDataSourceKind_DATA_SOURCE_KIND_UNSPECIFIED
}

func (x *TGenericDataSourceInstance) GetEndpoint() *TGenericEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *TGenericDataSourceInstance) GetCredentials() *TGenericCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *TGenericDataSourceInstance) GetProtocol() EGenericProtocol {
	if x != nil {
		return x.Protocol
	}
	return EGenericProtocol_PROTOCOL_UNSPECIFIED
}

func (x *TGenericDataSourceInstance) GetOptions() isTGenericDataSourceInstance_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetPgOptions() *TPostgreSQLDataSourceOptions {
	if x != nil {
		if x, ok := x.Options.(*TGenericDataSourceInstance_PgOptions); ok {
			return x.PgOptions
		}
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetChOptions() *TClickhouseDataSourceOptions {
	if x != nil {
		if x, ok := x.Options.(*TGenericDataSourceInstance_ChOptions); ok {
			return x.ChOptions
		}
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetS3Options() *TS3DataSourceOptions {
	if x != nil {
		if x, ok := x.Options.(*TGenericDataSourceInstance_S3Options); ok {
			return x.S3Options
		}
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetGpOptions() *TGreenplumDataSourceOptions {
	if x != nil {
		if x, ok := x.Options.(*TGenericDataSourceInstance_GpOptions); ok {
			return x.GpOptions
		}
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetOracleOptions() *TOracleDataSourceOptions {
	if x != nil {
		if x, ok := x.Options.(*TGenericDataSourceInstance_OracleOptions); ok {
			return x.OracleOptions
		}
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetLoggingOptions() *TLoggingDataSourceOptions {
	if x != nil {
		if x, ok := x.Options.(*TGenericDataSourceInstance_LoggingOptions); ok {
			return x.LoggingOptions
		}
	}
	return nil
}

func (x *TGenericDataSourceInstance) GetMongodbOptions() *TMongoDbDataSourceOptions {
	if x != nil {
		if x, ok := x.Options.(*TGenericDataSourceInstance_MongodbOptions); ok {
			return x.MongodbOptions
		}
	}
	return nil
}

type isTGenericDataSourceInstance_Options interface {
	isTGenericDataSourceInstance_Options()
}

type TGenericDataSourceInstance_PgOptions struct {
	PgOptions *TPostgreSQLDataSourceOptions `protobuf:"bytes,7,opt,name=pg_options,json=pgOptions,proto3,oneof"`
}

type TGenericDataSourceInstance_ChOptions struct {
	ChOptions *TClickhouseDataSourceOptions `protobuf:"bytes,8,opt,name=ch_options,json=chOptions,proto3,oneof"`
}

type TGenericDataSourceInstance_S3Options struct {
	S3Options *TS3DataSourceOptions `protobuf:"bytes,9,opt,name=s3_options,json=s3Options,proto3,oneof"`
}

type TGenericDataSourceInstance_GpOptions struct {
	GpOptions *TGreenplumDataSourceOptions `protobuf:"bytes,10,opt,name=gp_options,json=gpOptions,proto3,oneof"`
}

type TGenericDataSourceInstance_OracleOptions struct {
	OracleOptions *TOracleDataSourceOptions `protobuf:"bytes,11,opt,name=oracle_options,json=oracleOptions,proto3,oneof"`
}

type TGenericDataSourceInstance_LoggingOptions struct {
	LoggingOptions *TLoggingDataSourceOptions `protobuf:"bytes,12,opt,name=logging_options,json=loggingOptions,proto3,oneof"`
}

type TGenericDataSourceInstance_MongodbOptions struct {
	MongodbOptions *TMongoDbDataSourceOptions `protobuf:"bytes,13,opt,name=mongodb_options,json=mongodbOptions,proto3,oneof"`
}

func (*TGenericDataSourceInstance_PgOptions) isTGenericDataSourceInstance_Options() {}

func (*TGenericDataSourceInstance_ChOptions) isTGenericDataSourceInstance_Options() {}

func (*TGenericDataSourceInstance_S3Options) isTGenericDataSourceInstance_Options() {}

func (*TGenericDataSourceInstance_GpOptions) isTGenericDataSourceInstance_Options() {}

func (*TGenericDataSourceInstance_OracleOptions) isTGenericDataSourceInstance_Options() {}

func (*TGenericDataSourceInstance_LoggingOptions) isTGenericDataSourceInstance_Options() {}

func (*TGenericDataSourceInstance_MongodbOptions) isTGenericDataSourceInstance_Options() {}

type TGenericCredentials_TBasic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TGenericCredentials_TBasic) Reset() {
	*x = TGenericCredentials_TBasic{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TGenericCredentials_TBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGenericCredentials_TBasic) ProtoMessage() {}

func (x *TGenericCredentials_TBasic) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGenericCredentials_TBasic.ProtoReflect.Descriptor instead.
func (*TGenericCredentials_TBasic) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TGenericCredentials_TBasic) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TGenericCredentials_TBasic) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type TGenericCredentials_TToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TGenericCredentials_TToken) Reset() {
	*x = TGenericCredentials_TToken{}
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TGenericCredentials_TToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGenericCredentials_TToken) ProtoMessage() {}

func (x *TGenericCredentials_TToken) ProtoReflect() protoreflect.Message {
	mi := &file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGenericCredentials_TToken.ProtoReflect.Descriptor instead.
func (*TGenericCredentials_TToken) Descriptor() ([]byte, []int) {
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP(), []int{1, 1}
}

func (x *TGenericCredentials_TToken) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TGenericCredentials_TToken) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_yql_essentials_providers_common_proto_gateways_config_proto protoreflect.FileDescriptor

var file_yql_essentials_providers_common_proto_gateways_config_proto_rawDesc = string([]byte{
	0x0a, 0x3b, 0x79, 0x71, 0x6c, 0x2f, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x4e,
	0x59, 0x71, 0x6c, 0x22, 0x3a, 0x0a, 0x10, 0x54, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x8a, 0x02, 0x0a, 0x13, 0x54, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x2e, 0x54, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x12, 0x38, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x54, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x40, 0x0a, 0x06, 0x54,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x32, 0x0a,
	0x06, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x36, 0x0a, 0x1c,
	0x54, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0x1e, 0x0a, 0x1c, 0x54, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x54, 0x53, 0x33, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x35, 0x0a, 0x1b,
	0x54, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x70, 0x6c, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x22, 0x3d, 0x0a, 0x18, 0x54, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x54, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xfb, 0x04, 0x0a,
	0x19, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x62, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2c, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x62,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x45, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x7b, 0x0a, 0x1c, 0x75,
	0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3a, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44,
	0x62, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x45, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x19, 0x75,
	0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x7e, 0x0a, 0x1d, 0x75, 0x6e, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x62, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x45, 0x55, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x1a, 0x75, 0x6e,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x0c, 0x45, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x41, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x22, 0x6a, 0x0a, 0x1a, 0x45, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x55,
	0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x53, 0x5f, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x5f, 0x41, 0x53, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x6b, 0x0a,
	0x1b, 0x45, 0x55, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x17,
	0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x53,
	0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x41,
	0x53, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x9f, 0x06, 0x0a, 0x1a, 0x54,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x45,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f,
	0x74, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x6c,
	0x73, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x45, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x59, 0x71, 0x6c,
	0x2e, 0x54, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x68,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3b, 0x0a, 0x0a, 0x73, 0x33, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x53, 0x33, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x0a,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x70, 0x6c,
	0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x09, 0x67, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x47, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e,
	0x54, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x62, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0xda, 0x01, 0x0a,
	0x16, 0x45, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4c, 0x49,
	0x43, 0x4b, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4f, 0x53,
	0x54, 0x47, 0x52, 0x45, 0x53, 0x51, 0x4c, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x44, 0x42, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x53, 0x5f, 0x53, 0x51, 0x4c, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x52, 0x45, 0x45,
	0x4e, 0x50, 0x4c, 0x55, 0x4d, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x52, 0x41, 0x43, 0x4c,
	0x45, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x4f, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x09,
	0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x4f, 0x4e, 0x47, 0x4f, 0x5f, 0x44, 0x42, 0x10, 0x0a, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x45, 0x44, 0x49, 0x53, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f,
	0x4d, 0x45, 0x54, 0x48, 0x45, 0x55, 0x53, 0x10, 0x0c, 0x2a, 0x42, 0x0a, 0x10, 0x45, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x41, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x02, 0x42, 0x34, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x66, 0x71, 0x2d, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescOnce sync.Once
	file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescData []byte
)

func file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescGZIP() []byte {
	file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescOnce.Do(func() {
		file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yql_essentials_providers_common_proto_gateways_config_proto_rawDesc), len(file_yql_essentials_providers_common_proto_gateways_config_proto_rawDesc)))
	})
	return file_yql_essentials_providers_common_proto_gateways_config_proto_rawDescData
}

var file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_yql_essentials_providers_common_proto_gateways_config_proto_goTypes = []any{
	(EGenericDataSourceKind)(0),                                // 0: NYql.EGenericDataSourceKind
	(EGenericProtocol)(0),                                      // 1: NYql.EGenericProtocol
	(TMongoDbDataSourceOptions_EReadingMode)(0),                // 2: NYql.TMongoDbDataSourceOptions.EReadingMode
	(TMongoDbDataSourceOptions_EUnexpectedTypeDisplayMode)(0),  // 3: NYql.TMongoDbDataSourceOptions.EUnexpectedTypeDisplayMode
	(TMongoDbDataSourceOptions_EUnsupportedTypeDisplayMode)(0), // 4: NYql.TMongoDbDataSourceOptions.EUnsupportedTypeDisplayMode
	(*TGenericEndpoint)(nil),                                   // 5: NYql.TGenericEndpoint
	(*TGenericCredentials)(nil),                                // 6: NYql.TGenericCredentials
	(*TPostgreSQLDataSourceOptions)(nil),                       // 7: NYql.TPostgreSQLDataSourceOptions
	(*TClickhouseDataSourceOptions)(nil),                       // 8: NYql.TClickhouseDataSourceOptions
	(*TS3DataSourceOptions)(nil),                               // 9: NYql.TS3DataSourceOptions
	(*TGreenplumDataSourceOptions)(nil),                        // 10: NYql.TGreenplumDataSourceOptions
	(*TOracleDataSourceOptions)(nil),                           // 11: NYql.TOracleDataSourceOptions
	(*TLoggingDataSourceOptions)(nil),                          // 12: NYql.TLoggingDataSourceOptions
	(*TMongoDbDataSourceOptions)(nil),                          // 13: NYql.TMongoDbDataSourceOptions
	(*TGenericDataSourceInstance)(nil),                         // 14: NYql.TGenericDataSourceInstance
	(*TGenericCredentials_TBasic)(nil),                         // 15: NYql.TGenericCredentials.TBasic
	(*TGenericCredentials_TToken)(nil),                         // 16: NYql.TGenericCredentials.TToken
}
var file_yql_essentials_providers_common_proto_gateways_config_proto_depIdxs = []int32{
	15, // 0: NYql.TGenericCredentials.basic:type_name -> NYql.TGenericCredentials.TBasic
	16, // 1: NYql.TGenericCredentials.token:type_name -> NYql.TGenericCredentials.TToken
	2,  // 2: NYql.TMongoDbDataSourceOptions.reading_mode:type_name -> NYql.TMongoDbDataSourceOptions.EReadingMode
	3,  // 3: NYql.TMongoDbDataSourceOptions.unexpected_type_display_mode:type_name -> NYql.TMongoDbDataSourceOptions.EUnexpectedTypeDisplayMode
	4,  // 4: NYql.TMongoDbDataSourceOptions.unsupported_type_display_mode:type_name -> NYql.TMongoDbDataSourceOptions.EUnsupportedTypeDisplayMode
	0,  // 5: NYql.TGenericDataSourceInstance.kind:type_name -> NYql.EGenericDataSourceKind
	5,  // 6: NYql.TGenericDataSourceInstance.endpoint:type_name -> NYql.TGenericEndpoint
	6,  // 7: NYql.TGenericDataSourceInstance.credentials:type_name -> NYql.TGenericCredentials
	1,  // 8: NYql.TGenericDataSourceInstance.protocol:type_name -> NYql.EGenericProtocol
	7,  // 9: NYql.TGenericDataSourceInstance.pg_options:type_name -> NYql.TPostgreSQLDataSourceOptions
	8,  // 10: NYql.TGenericDataSourceInstance.ch_options:type_name -> NYql.TClickhouseDataSourceOptions
	9,  // 11: NYql.TGenericDataSourceInstance.s3_options:type_name -> NYql.TS3DataSourceOptions
	10, // 12: NYql.TGenericDataSourceInstance.gp_options:type_name -> NYql.TGreenplumDataSourceOptions
	11, // 13: NYql.TGenericDataSourceInstance.oracle_options:type_name -> NYql.TOracleDataSourceOptions
	12, // 14: NYql.TGenericDataSourceInstance.logging_options:type_name -> NYql.TLoggingDataSourceOptions
	13, // 15: NYql.TGenericDataSourceInstance.mongodb_options:type_name -> NYql.TMongoDbDataSourceOptions
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_yql_essentials_providers_common_proto_gateways_config_proto_init() }
func file_yql_essentials_providers_common_proto_gateways_config_proto_init() {
	if File_yql_essentials_providers_common_proto_gateways_config_proto != nil {
		return
	}
	file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[1].OneofWrappers = []any{
		(*TGenericCredentials_Basic)(nil),
		(*TGenericCredentials_Token)(nil),
	}
	file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes[9].OneofWrappers = []any{
		(*TGenericDataSourceInstance_PgOptions)(nil),
		(*TGenericDataSourceInstance_ChOptions)(nil),
		(*TGenericDataSourceInstance_S3Options)(nil),
		(*TGenericDataSourceInstance_GpOptions)(nil),
		(*TGenericDataSourceInstance_OracleOptions)(nil),
		(*TGenericDataSourceInstance_LoggingOptions)(nil),
		(*TGenericDataSourceInstance_MongodbOptions)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yql_essentials_providers_common_proto_gateways_config_proto_rawDesc), len(file_yql_essentials_providers_common_proto_gateways_config_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yql_essentials_providers_common_proto_gateways_config_proto_goTypes,
		DependencyIndexes: file_yql_essentials_providers_common_proto_gateways_config_proto_depIdxs,
		EnumInfos:         file_yql_essentials_providers_common_proto_gateways_config_proto_enumTypes,
		MessageInfos:      file_yql_essentials_providers_common_proto_gateways_config_proto_msgTypes,
	}.Build()
	File_yql_essentials_providers_common_proto_gateways_config_proto = out.File
	file_yql_essentials_providers_common_proto_gateways_config_proto_goTypes = nil
	file_yql_essentials_providers_common_proto_gateways_config_proto_depIdxs = nil
}
