syntax = "proto3";
package NYql.Connector.Observation.V1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/ydb-platform/fq-connector-go/api/observation/v1";

// ObservationService provides methods to observe and analyze queries
// processed by the connector service.
service ObservationService {
  // ListIncomingQueries retrieves a list of incoming queries with pagination
  rpc ListIncomingQueries(ListIncomingQueriesRequest) returns (ListIncomingQueriesResponse) {}
  
  // ListRunningIncomingQueries retrieves all currently running incoming queries
  rpc ListRunningIncomingQueries(ListRunningIncomingQueriesRequest) returns (ListIncomingQueriesResponse) {}
  
  // ListOutgoingQueries retrieves a list of outgoing queries with pagination
  rpc ListOutgoingQueries(ListOutgoingQueriesRequest) returns (ListOutgoingQueriesResponse) {}
  
  // ListRunningOutgoingQueries retrieves all currently running outgoing queries
  rpc ListRunningOutgoingQueries(ListRunningOutgoingQueriesRequest) returns (ListOutgoingQueriesResponse) {}
  
  // ListSimilarOutgoingQueriesWithDifferentStats finds groups of similar outgoing queries with different row counts
  rpc ListSimilarOutgoingQueriesWithDifferentStats(ListSimilarOutgoingQueriesWithDifferentStatsRequest) 
      returns (ListSimilarOutgoingQueriesWithDifferentStatsResponse) {}
}

// QueryState represents the state of a query
enum QueryState {
  QUERY_STATE_UNSPECIFIED = 0;
  QUERY_STATE_RUNNING = 1;
  QUERY_STATE_FINISHED = 2;
  QUERY_STATE_CANCELLED = 3;
}

// IncomingQuery represents an incoming query from a client
message IncomingQuery {
  // Unique identifier for the incoming query
  uint64 id = 1;
  
  // Type of data source being queried
  string data_source_kind = 2;
  
  // Number of rows read by this query
  int64 rows_read = 3;
  
  // Number of bytes read by this query
  int64 bytes_read = 4;
  
  // Current state of the query
  QueryState state = 5;
  
  // When the query was created
  google.protobuf.Timestamp created_at = 6;
  
  // When the query finished (if applicable)
  google.protobuf.Timestamp finished_at = 7;
  
  // Error message if the query failed
  string error = 8;
}

// OutgoingQuery represents an outgoing query to a data source
message OutgoingQuery {
  // Unique identifier for the outgoing query
  uint64 id = 1;
  
  // ID of the parent incoming query
  uint64 incoming_query_id = 2;
  
  // Name of the database being queried
  string database_name = 3;
  
  // Endpoint of the database being queried
  string database_endpoint = 4;
  
  // The actual query text sent to the data source
  string query_text = 5;
  
  // Arguments passed with the query (serialized)
  string query_args = 6;
  
  // Current state of the query
  QueryState state = 7;
  
  // When the query was created
  google.protobuf.Timestamp created_at = 8;
  
  // When the query finished (if applicable)
  google.protobuf.Timestamp finished_at = 9;
  
  // Number of rows read by this query
  int64 rows_read = 10;
  
  // Error message if the query failed
  string error = 11;
}

// ListIncomingQueriesRequest is the request message for ListIncomingQueries
message ListIncomingQueriesRequest {
  // Optional filter by query state
  optional QueryState state = 1;
  
  // Maximum number of queries to return
  int32 limit = 2;
  
  // Number of queries to skip
  int32 offset = 3;
}

// ListIncomingQueriesResponse is the response message for ListIncomingQueries
message ListIncomingQueriesResponse {
  // List of incoming queries
  repeated IncomingQuery queries = 1;
  
  // Total number of queries matching the request (for pagination)
  int32 total_count = 2;
}

// ListRunningIncomingQueriesRequest is the request message for ListRunningIncomingQueries
message ListRunningIncomingQueriesRequest {
  // Placeholder for future extensions
}

// ListOutgoingQueriesRequest is the request message for ListOutgoingQueries
message ListOutgoingQueriesRequest {
  // Optional filter by parent incoming query ID
  optional uint64 incoming_query_id = 1;
  
  // Optional filter by query state
  optional QueryState state = 2;
  
  // Maximum number of queries to return
  int32 limit = 3;
  
  // Number of queries to skip
  int32 offset = 4;
}

// ListOutgoingQueriesResponse is the response message for ListOutgoingQueries
message ListOutgoingQueriesResponse {
  // List of outgoing queries
  repeated OutgoingQuery queries = 1;
  
  // Total number of queries matching the request (for pagination)
  int32 total_count = 2;
}

// ListRunningOutgoingQueriesRequest is the request message for ListRunningOutgoingQueries
message ListRunningOutgoingQueriesRequest {
  // Placeholder for future extensions
}

// ListSimilarOutgoingQueriesWithDifferentStatsRequest is the request message for ListSimilarOutgoingQueriesWithDifferentStats
message ListSimilarOutgoingQueriesWithDifferentStatsRequest {
  // Placeholder for future extensions
}

// QueryGroup represents a group of similar queries
message QueryGroup {
  // List of similar queries with different statistics
  repeated OutgoingQuery queries = 1;
}

// ListSimilarOutgoingQueriesWithDifferentStatsResponse is the response message for ListSimilarOutgoingQueriesWithDifferentStats
message ListSimilarOutgoingQueriesWithDifferentStatsResponse {
  // Groups of similar queries
  repeated QueryGroup query_groups = 1;
}