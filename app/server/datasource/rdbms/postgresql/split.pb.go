// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: app/server/datasource/rdbms/postgresql/split.proto

package postgresql

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TInt32Bounds represents the bounds that can be found for an `INTEGER`, `SERIAL` column
// An open interval can be represented by omitting one of the bounds.
type TInt32Bounds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upper         *wrappers.Int32Value   `protobuf:"bytes,1,opt,name=upper,proto3" json:"upper,omitempty"`
	Lower         *wrappers.Int32Value   `protobuf:"bytes,2,opt,name=lower,proto3" json:"lower,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TInt32Bounds) Reset() {
	*x = TInt32Bounds{}
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TInt32Bounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TInt32Bounds) ProtoMessage() {}

func (x *TInt32Bounds) ProtoReflect() protoreflect.Message {
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TInt32Bounds.ProtoReflect.Descriptor instead.
func (*TInt32Bounds) Descriptor() ([]byte, []int) {
	return file_app_server_datasource_rdbms_postgresql_split_proto_rawDescGZIP(), []int{0}
}

func (x *TInt32Bounds) GetUpper() *wrappers.Int32Value {
	if x != nil {
		return x.Upper
	}
	return nil
}

func (x *TInt32Bounds) GetLower() *wrappers.Int32Value {
	if x != nil {
		return x.Lower
	}
	return nil
}

// TSplitDescription represents the description of PostgreSQL's table split.
type TSplitDescription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TSplitDescription_Single
	//	*TSplitDescription_HistogramBounds
	Payload       isTSplitDescription_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TSplitDescription) Reset() {
	*x = TSplitDescription{}
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TSplitDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSplitDescription) ProtoMessage() {}

func (x *TSplitDescription) ProtoReflect() protoreflect.Message {
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSplitDescription.ProtoReflect.Descriptor instead.
func (*TSplitDescription) Descriptor() ([]byte, []int) {
	return file_app_server_datasource_rdbms_postgresql_split_proto_rawDescGZIP(), []int{1}
}

func (x *TSplitDescription) GetPayload() isTSplitDescription_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TSplitDescription) GetSingle() *TSplitDescription_TSingle {
	if x != nil {
		if x, ok := x.Payload.(*TSplitDescription_Single); ok {
			return x.Single
		}
	}
	return nil
}

func (x *TSplitDescription) GetHistogramBounds() *TSplitDescription_THistogramBounds {
	if x != nil {
		if x, ok := x.Payload.(*TSplitDescription_HistogramBounds); ok {
			return x.HistogramBounds
		}
	}
	return nil
}

type isTSplitDescription_Payload interface {
	isTSplitDescription_Payload()
}

type TSplitDescription_Single struct {
	Single *TSplitDescription_TSingle `protobuf:"bytes,1,opt,name=single,proto3,oneof"`
}

type TSplitDescription_HistogramBounds struct {
	HistogramBounds *TSplitDescription_THistogramBounds `protobuf:"bytes,2,opt,name=histogram_bounds,json=histogramBounds,proto3,oneof"`
}

func (*TSplitDescription_Single) isTSplitDescription_Payload() {}

func (*TSplitDescription_HistogramBounds) isTSplitDescription_Payload() {}

// TSingle means that table will be read sequentially
type TSplitDescription_TSingle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TSplitDescription_TSingle) Reset() {
	*x = TSplitDescription_TSingle{}
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TSplitDescription_TSingle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSplitDescription_TSingle) ProtoMessage() {}

func (x *TSplitDescription_TSingle) ProtoReflect() protoreflect.Message {
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSplitDescription_TSingle.ProtoReflect.Descriptor instead.
func (*TSplitDescription_TSingle) Descriptor() ([]byte, []int) {
	return file_app_server_datasource_rdbms_postgresql_split_proto_rawDescGZIP(), []int{1, 0}
}

// THistogramBounds describes the method of large table splitting
// based on the PostgreSQL's internal table stats.
type TSplitDescription_THistogramBounds struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ColumnName string                 `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TSplitDescription_THistogramBounds_Int32Bounds
	Payload       isTSplitDescription_THistogramBounds_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TSplitDescription_THistogramBounds) Reset() {
	*x = TSplitDescription_THistogramBounds{}
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TSplitDescription_THistogramBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSplitDescription_THistogramBounds) ProtoMessage() {}

func (x *TSplitDescription_THistogramBounds) ProtoReflect() protoreflect.Message {
	mi := &file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSplitDescription_THistogramBounds.ProtoReflect.Descriptor instead.
func (*TSplitDescription_THistogramBounds) Descriptor() ([]byte, []int) {
	return file_app_server_datasource_rdbms_postgresql_split_proto_rawDescGZIP(), []int{1, 1}
}

func (x *TSplitDescription_THistogramBounds) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *TSplitDescription_THistogramBounds) GetPayload() isTSplitDescription_THistogramBounds_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TSplitDescription_THistogramBounds) GetInt32Bounds() *TInt32Bounds {
	if x != nil {
		if x, ok := x.Payload.(*TSplitDescription_THistogramBounds_Int32Bounds); ok {
			return x.Int32Bounds
		}
	}
	return nil
}

type isTSplitDescription_THistogramBounds_Payload interface {
	isTSplitDescription_THistogramBounds_Payload()
}

type TSplitDescription_THistogramBounds_Int32Bounds struct {
	Int32Bounds *TInt32Bounds `protobuf:"bytes,2,opt,name=int32_bounds,json=int32Bounds,proto3,oneof"`
}

func (*TSplitDescription_THistogramBounds_Int32Bounds) isTSplitDescription_THistogramBounds_Payload() {
}

var File_app_server_datasource_rdbms_postgresql_split_proto protoreflect.FileDescriptor

var file_app_server_datasource_rdbms_postgresql_split_proto_rawDesc = string([]byte{
	0x0a, 0x32, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2f, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x2f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x35, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x44, 0x42, 0x4d, 0x53,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x0c, 0x54,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x75,
	0x70, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x05, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x22, 0xc9, 0x03, 0x0a, 0x11, 0x54, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52,
	0x44, 0x42, 0x4d, 0x53, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x2e,
	0x54, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59,
	0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x41, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x44, 0x42, 0x4d, 0x53, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x2e, 0x54, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0x09, 0x0a, 0x07,
	0x54, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x1a, 0xa8, 0x01, 0x0a, 0x10, 0x54, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x68, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x4e, 0x59, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x44, 0x42, 0x4d, 0x53,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x2e, 0x54, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x51, 0x5a,
	0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x66, 0x71, 0x2d, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72,
	0x64, 0x62, 0x6d, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_app_server_datasource_rdbms_postgresql_split_proto_rawDescOnce sync.Once
	file_app_server_datasource_rdbms_postgresql_split_proto_rawDescData []byte
)

func file_app_server_datasource_rdbms_postgresql_split_proto_rawDescGZIP() []byte {
	file_app_server_datasource_rdbms_postgresql_split_proto_rawDescOnce.Do(func() {
		file_app_server_datasource_rdbms_postgresql_split_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_server_datasource_rdbms_postgresql_split_proto_rawDesc), len(file_app_server_datasource_rdbms_postgresql_split_proto_rawDesc)))
	})
	return file_app_server_datasource_rdbms_postgresql_split_proto_rawDescData
}

var file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_app_server_datasource_rdbms_postgresql_split_proto_goTypes = []any{
	(*TInt32Bounds)(nil),                       // 0: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TInt32Bounds
	(*TSplitDescription)(nil),                  // 1: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription
	(*TSplitDescription_TSingle)(nil),          // 2: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription.TSingle
	(*TSplitDescription_THistogramBounds)(nil), // 3: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription.THistogramBounds
	(*wrappers.Int32Value)(nil),                // 4: google.protobuf.Int32Value
}
var file_app_server_datasource_rdbms_postgresql_split_proto_depIdxs = []int32{
	4, // 0: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TInt32Bounds.upper:type_name -> google.protobuf.Int32Value
	4, // 1: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TInt32Bounds.lower:type_name -> google.protobuf.Int32Value
	2, // 2: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription.single:type_name -> NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription.TSingle
	3, // 3: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription.histogram_bounds:type_name -> NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription.THistogramBounds
	0, // 4: NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TSplitDescription.THistogramBounds.int32_bounds:type_name -> NYql.Connector.App.Server.DataSource.RDBMS.PostgreSQL.TInt32Bounds
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_app_server_datasource_rdbms_postgresql_split_proto_init() }
func file_app_server_datasource_rdbms_postgresql_split_proto_init() {
	if File_app_server_datasource_rdbms_postgresql_split_proto != nil {
		return
	}
	file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[1].OneofWrappers = []any{
		(*TSplitDescription_Single)(nil),
		(*TSplitDescription_HistogramBounds)(nil),
	}
	file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes[3].OneofWrappers = []any{
		(*TSplitDescription_THistogramBounds_Int32Bounds)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_server_datasource_rdbms_postgresql_split_proto_rawDesc), len(file_app_server_datasource_rdbms_postgresql_split_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_server_datasource_rdbms_postgresql_split_proto_goTypes,
		DependencyIndexes: file_app_server_datasource_rdbms_postgresql_split_proto_depIdxs,
		MessageInfos:      file_app_server_datasource_rdbms_postgresql_split_proto_msgTypes,
	}.Build()
	File_app_server_datasource_rdbms_postgresql_split_proto = out.File
	file_app_server_datasource_rdbms_postgresql_split_proto_goTypes = nil
	file_app_server_datasource_rdbms_postgresql_split_proto_depIdxs = nil
}
