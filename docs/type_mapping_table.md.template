# Сопоставление систем типов

Одной из ключевых функций коннектора является представление метаданных и данных внешних источников в формате, понятном для YDB. При извлечении метаданных для этого используется система типов языка [`YQL`](https://ydb.tech/docs/ru/yql/reference/types/), при извлечении данных - система типов [`Apache Arrow`](https://arrow.apache.org/docs/cpp/api/datatype.html). В данном упомянутые системы сопоставляются с системами типов различных внешних источников. Актуальная реализация коннектора должна соответствовать этой таблице.

## О различии систем типов разных источников данных

Фундаментальной особенностью системы типов любой реляционных СУБД является отношение к опциональности значений в столбцах. Может ли колонка содержать значение `NULL` или нет? По этому критерию все внешние источники данных можно разделить на две группы:

* С системой типов, чётко разделяющей nullable и не-nullable колонки. Пример - `ClickHouse`. По умолчанию все колонки в таблицах `ClickHouse` non-nullable, то есть пользователь физически не может записать в них `NULL`. Однако он может явно указать колонку как `NULLABLE` в момент создания таблицы и заплатить за это более высокими накладными расходами при хранении данных. Ещё один пример - `YDB`: там примитивные типы данных [не могут](https://ydb.tech/docs/ru/yql/reference/types/optional) хранить значения `NULL`.
* С системой типов, где все колонки потенциально nullable. Пример - `PostgreSQL`. Даже если колонка была создана c `NOT NULL` constraint, это ограничение находится лишь на уровне метаданных таблицы. Физически колонка всё равно может содержать `NULL`ы.

При формировании схемы таблицы в момент отдачи метаданных (метод `DescribeTable`) для описания non-nullable колонок должны использоваться обычные типы данных, например `INT8`, `STRING`, а для nullable колонок - [опциональные](https://ydb.tech/docs/ru/yql/reference/types/optional), то есть `Optional<INT8>`, `Optional<STRING>`. 

## Таблица соответствия типов

:one: - система типов с nullable и non-nullable типами.
:two: - система типов только с nullable типами. 
:white_check_mark: - тип поддерживается
:x: - тип не поддерживается

